diff --git a/code/task5a/task5a_LSH.py b/code/task5a/task5a_LSH.py
index 9395b5b..e741d6b 100644
--- a/code/task5a/task5a_LSH.py
+++ b/code/task5a/task5a_LSH.py
@@ -1,18 +1,20 @@
 import numpy as np
 import pandas as pd
 from sklearn.preprocessing import MinMaxScaler
-from task5a_hash_table import Task5aHashTable
+from task5a.task5a_hash_table import Task5aHashTable
 
 """ Ha,b(v) = |_(r.v + b)/w_| --- (1) """
 class Task5aLSH:
-	def __init__(self, L_layer_count, k_hash_functions_per_layer, w_parameter = 4):
+	def __init__(self, L_layer_count, k_hash_functions_per_layer,data_matrix,w_parameter = 4,feature_count=0):
 		self.L_layer_count = L_layer_count # number of layers
 		self.k_hash_functions_per_layer = k_hash_functions_per_layer # number of random projections per layer
-		self.feature_count = 0 # feature_count -- temporarily reading a dataset
+		#self.feature_count = 0 # feature_count -- temporarily reading a dataset
+		self.feature_count = feature_count
 		self.data_matrix = []
+		self.data_matrix = data_matrix
 		self.data_matrix_transpose = []
 		self.image_ids = list()
-		self.init_data() # Initializes the data matrix and also the feature count
+		#self.init_data() # Initializes the data matrix and also the feature count
 		self.w_parameter = w_parameter # w in (1)
 		self.hash_tables = list()
 		# create L hash tables with k hash functions per layer
@@ -88,11 +90,16 @@ class Task5aLSH:
 	"""
 	def fill_the_hashtable(self, table_instance):
 		print('Filling a hash table...')
-		for index, image in enumerate(self.data_matrix):
-			the_label = self.image_ids[index]
-			table_instance.__setitem__(image, the_label)
+		# for index, image in enumerate(self.data_matrix):
+		# 	the_label = self.image_ids[index]
+		# 	table_instance.__setitem__(image, the_label)
 			# the_hash = table_instance.generate_hash(image)
 			# table_instance.hash_table[the_hash] = the_label
+		for label, image in self.data_matrix.items():
+	        #the_label = label
+			the_hash = table_instance.generate_hash(image)
+			#table_instance.hash_table[the_hash] = label
+			table_instance.__setitem__(image, label)
 
 	"""
 	Method Explanation:
